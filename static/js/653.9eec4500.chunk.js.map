{"version":3,"file":"static/js/653.9eec4500.chunk.js","mappings":"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","sources":["components/ListMovies/listMovies.jsx","components/SearchMovie/searchMovie.jsx","pages/MoviePage.jsx","utils/searchDataMovie.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst ListMovies = ({ movies }) => {\n  const location = useLocation()\n  \n    return (\n      <ul>\n        {movies.map(({ title, id, name }) => {\n          return (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title ? title : name}\n              </Link>{' '}\n            </li>\n          );\n        })}\n      </ul>\n    );\n}\nexport default ListMovies","import { useSearchParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport {FetchAPI} from \"utils/searchDataMovie\"\nimport ListMovies from 'components/ListMovies/listMovies';\n\n\nconst SearchMovie = () => {\n    const [movies, setMovie] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    \n    FetchAPI(query.trim()).then(res => {\n      return setMovie(res.results);\n    });\n  }\n  \n  const handleChange = ({ target }) => {\n    setSearchParams({query: target.value});\n  };\n  \n  return (\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input\n            name=\"query\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            value={query}\n            onChange={handleChange}\n            type=\"text\"\n          />\n          <button type=\"submit\">submit</button>\n        </form>\n        {movies ? <ListMovies movies={movies} /> : ''}\n      </div>\n    );\n    }\n\nexport default SearchMovie","import SearchMovie from \"components/SearchMovie/searchMovie\";\n\n\nconst MoviePage = () => {\n    return (\n      <>\n        <SearchMovie />\n      </>\n    );\n}\nexport default MoviePage;","\n\n  const API_KEY = 'bed58f4c3dbb6f0a7987e1858ff87c95';\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const TREND_URL = `${BASE_URL}/trending/all/day`;\n  const SEARCH_URL = `${BASE_URL}/search/movie`;\nconst ID_URL = `${BASE_URL}/movie`;\n  \n\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZWQ1OGY0YzNkYmI2ZjBhNzk4N2UxODU4ZmY4N2M5NSIsInN1YiI6IjY0NmQwNWJhZDE4NTcyMDE4MDJlOGYyOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.4jCqRdZ9sRAbpi5bh6szcuiE2wlzfaZQtIR0L9NKky0',\n    },\n  };\n\n  export async function trendMovies(page = 1) {\n    return await fetch(TREND_URL, options)\n      .then(response => {\n        return response.json();\n      })\n      .catch(error => console.log(error));\n  }\n  \nexport async function getMovieById(id) {\n  try {\n    const data = await fetch(\n      `${ID_URL}/${id}?api_key=${API_KEY}&language=en-US`,\n      options\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        };\n        throw new Error()\n      })\n    return data\n  } catch (error) {\n    alert('Тут зовсім порожньо');\n  }\n}\n\n\nexport  async function FetchAPI(query, page=1) {\n  try {\n   return await fetch(\n     `${SEARCH_URL}?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}`,\n     options\n    ).then(res=> res.json());\n } catch (error) {\n   console.error('Smth wrong with api search fetch' + error);\n }\n}\n    \nexport async function getMovieCredits(id) {\n  try {\n    const data = await fetch(\n      `${ID_URL}/${id}/credits?api_key=${API_KEY}&language=en-US`,\n      options\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error();\n    });\n    return data;\n  } catch (error) {\n    alert('Тут зовсім порожньо');\n  }\n}\n \nexport async function getMovieReviews(id) {\n  try {\n    const data = await fetch(\n      `${ID_URL}/${id}/reviews?api_key=${API_KEY}&language=en-US`,\n      options\n    ).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error();\n    });\n    return data;\n  } catch (error) {\n    alert('Тут зовсім порожньо');\n  }\n}\n  // return Promise.reject(new Error(`За запитом ${query} нічого не знайдено`));","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movies","location","useLocation","map","title","id","name","to","state","from","useState","setMovie","useSearchParams","searchParams","setSearchParams","query","get","onSubmit","e","preventDefault","FetchAPI","trim","then","res","results","autoComplete","autoFocus","placeholder","value","onChange","target","type","API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","options","method","headers","accept","Authorization","trendMovies","fetch","response","json","catch","error","console","log","getMovieById","ok","Error","data","alert","page","getMovieCredits","getMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}